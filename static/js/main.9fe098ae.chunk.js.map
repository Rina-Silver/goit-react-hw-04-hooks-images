{"version":3,"sources":["components/Modal/Modal.module.css","App.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Loader/Loader.js","components/Button/Button.jsx","components/Modal/Modal.jsx","App.js","services/pixabay-api.js","helper/mapper.js","index.js","components/Searchbar/Searchbar.module.css","components/ImageGallery/ImageGallery.module.css"],"names":["module","exports","Searchbar","onSubmit","useState","value","setValue","className","s","SearchForm","e","preventDefault","trim","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","type","SearchForm_button","SearchForm_button_label","SearchForm_input","placeholder","autoComplete","autoFocus","onChange","currentTarget","toLowerCase","ImageGalleryItem","id","src","srcLarge","onOpenModal","onClick","alt","ImageGalleryItem__image","ImageGallery","images","map","webformatURL","largeImageURL","centeredLoader","textAlign","loader","style","color","height","width","timeout","Button","modalRoot","document","querySelector","Modal","onClose","imageModal","handleKeyDown","code","useEffect","window","addEventListener","removeEventListener","createPortal","Overlay","target","App","setImages","query","setQuery","page","setPage","showModal","setShowModal","showSpinner","setShowSpinner","setLargeImageURL","setError","fetch","then","res","ok","json","Promise","reject","Error","API","prevImages","mapper","hits","length","warn","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","newestOnTop","rtl","pauseOnFocusLoss","prevPage","Loader","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9fe098ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__gjUO0\",\"Modal\":\"Modal_Modal__2ZVYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1qQS3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2f4je\"};","import { useState } from 'react';\r\nimport s from './Searchbar.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [value, setValue] = useState('');\r\n\r\n  const handleValueChange = e => {\r\n    setValue(e.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (value.trim() === '') {\r\n      // console.log('Не введено значение');\r\n      return toast.error('Не введено значение', {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n    onSubmit(value);\r\n    setValue('');\r\n  };\r\n\r\n  return (\r\n    <header className={s.Searchbar}>\r\n      <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className={s.SearchForm_button}>\r\n          <span className={s.SearchForm_button_label}>🐌</span>\r\n        </button>\r\n\r\n        <input\r\n          className={s.SearchForm_input}\r\n          type=\"text\"\r\n          placeholder=\"Search images and photos\"\r\n          value={value}\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          onChange={handleValueChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\n// export default class Searchbar extends Component {\r\n//   state = {\r\n//     value: '',\r\n//   };\r\n//   static propTypes = {\r\n//     onSubmit: PropTypes.func.isRequired,\r\n//   };\r\n\r\n//   handleValueChange = e => {\r\n//     this.setState({ value: e.currentTarget.value.toLowerCase() });\r\n//   };\r\n\r\n//   handleSubmit = e => {\r\n//     e.preventDefault();\r\n//     const { value } = this.state;\r\n//     if (value.trim() === '') {\r\n//       // console.log('Не введено значение');\r\n//       return toast.error('Не введено значение', {\r\n//         position: 'top-right',\r\n//         autoClose: 5000,\r\n//         hideProgressBar: false,\r\n//         closeOnClick: true,\r\n//         pauseOnHover: true,\r\n//         draggable: true,\r\n//         progress: undefined,\r\n//       });\r\n//     }\r\n//     this.props.onSubmit(value);\r\n//     this.setState({ value: '' });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <header className={s.Searchbar}>\r\n//         <form className={s.SearchForm} onSubmit={this.handleSubmit}>\r\n//           <button type=\"submit\" className={s.SearchForm_button}>\r\n//             <span className={s.SearchForm_button_label}>🐌</span>\r\n//           </button>\r\n\r\n//           <input\r\n//             className={s.SearchForm_input}\r\n//             type=\"text\"\r\n//             placeholder=\"Search images and photos\"\r\n//             value={this.state.value}\r\n//             autoComplete=\"off\"\r\n//             autoFocus\r\n//             onChange={this.handleValueChange}\r\n//           />\r\n//         </form>\r\n//       </header>\r\n//     );\r\n//   }\r\n// }\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport s from './ImageGallery.module.css';\r\n\r\nexport default function ImageGalleryItem({ id, src, srcLarge, onOpenModal }) {\r\n  // console.log(srcLarge);\r\n  return (\r\n    <li\r\n      className={s.ImageGalleryItem}\r\n      key={src}\r\n      onClick={() => onOpenModal({ srcLarge })}\r\n    >\r\n      <img\r\n        id={id}\r\n        src={src}\r\n        alt=\"Pic from Pixabay\"\r\n        className={s.ImageGalleryItem__image}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  src: PropTypes.string,\r\n  srcLarge: PropTypes.string.isRequired,\r\n  onOpenModal: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ImageGallery.module.css';\r\nimport ImageGalleryItem from './ImageGalleryItem';\r\n//rfc\r\nexport default function ImageGallery({ images, onOpenModal }) {\r\n  //console.log(images);\r\n  return (\r\n    <div>\r\n      <ul className={s.ImageGallery}>\r\n        {images.map(({ id, webformatURL, largeImageURL }) => (\r\n          <ImageGalleryItem\r\n            id={id}\r\n            src={webformatURL}\r\n            srcLarge={largeImageURL}\r\n            onOpenModal={onOpenModal}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      src: PropTypes.string.isRequired,\r\n      srcLarge: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  onOpenModal: PropTypes.func.isRequired,\r\n};\r\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Loader from 'react-loader-spinner';\r\nconst centeredLoader = {\r\n  textAlign: 'center',\r\n};\r\n\r\nconst loader = () => (\r\n  <div style={{ ...centeredLoader }}>\r\n    <Loader\r\n      type=\"TailSpin\"\r\n      color=\"#00BFFF\"\r\n      height={100}\r\n      width={100}\r\n      timeout={3000} //3 secs\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default loader;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\nconst Button = ({ images, onClick }) => {\r\n  return (\r\n    <button type=\"button\" className={s.Button} onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\nexport default Button;\r\n","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal({ onClose, imageModal }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [handleKeyDown]);\r\n\r\n  function handleKeyDown(e) {\r\n    if (e.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  }\r\n  const handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n  return createPortal(\r\n    <div className={s.Overlay} onClick={handleBackdropClick}>\r\n      <div className={s.Modal}>\r\n        <img src={imageModal} alt=\"\" />\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  imageModal: PropTypes.string.isRequired,\r\n};\r\n\r\n// export default class Modal extends Component {\r\n//   static propTypes = {\r\n//     onClose: PropTypes.func.isRequired,\r\n//     imageModal: PropTypes.string,\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     window.addEventListener('keydown', this.handleKeyDown);\r\n//   }\r\n//   componentWillUnmount() {\r\n//     window.removeEventListener('keydown', this.handleKeyDown);\r\n//   }\r\n\r\n//   handleKeyDown = e => {\r\n//     if (e.code === 'Escape') {\r\n//       this.props.onClose();\r\n//     }\r\n//   };\r\n//   handleBackdropClick = e => {\r\n//     if (e.currentTarget === e.target) {\r\n//       this.props.onClose();\r\n//     }\r\n//   };\r\n\r\n//   render() {\r\n//     return createPortal(\r\n//       <div className={s.Overlay} onClick={this.handleBackdropClick}>\r\n//         <div className={s.Modal}>\r\n//           <img src={this.props.imageModal} alt=\"\" />\r\n//         </div>\r\n//       </div>,\r\n//       modalRoot,\r\n//     );\r\n//   }\r\n// }\r\n","import { useState, useEffect } from 'react';\nimport s from './App.module.css';\nimport Searchbar from 'components/Searchbar';\nimport ImageGallery from 'components/ImageGallery';\nimport Loader from 'components/Loader';\nimport Button from 'components/Button';\nimport Modal from 'components/Modal';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { mapper } from './helper/mapper';\nimport * as API from './services/pixabay-api';\n\n//rcc\n//rfc\n\nexport default function App() {\n  const [images, setImages] = useState(null);\n  const [query, setQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [showSpinner, setShowSpinner] = useState(false);\n  const [largeImageURL, setLargeImageURL] = useState('');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getImages = () => {\n      if (!query) {\n        return;\n      }\n\n      setShowSpinner(true);\n\n      API.fetchPixabayImg(query, page)\n        .then(images => {\n          setImages(prevImages => [...prevImages, ...mapper(images.hits)]);\n\n          if (images.hits.length === 0) {\n            toast.warn(`Ничего не найдено`, {\n              position: 'top-right',\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              draggable: true,\n              progress: undefined,\n            });\n          }\n        })\n        .catch(error => setError(error))\n        .finally(() => {\n          setShowSpinner(false);\n          if (page > 1) {\n            scrollTo();\n          }\n        });\n    };\n    getImages();\n  }, [page, query]);\n\n  const changeInputValue = query => {\n    setQuery(query);\n    setPage(1);\n    setImages([]);\n  };\n\n  const scrollTo = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const onClickImg = imageModal => {\n    setLargeImageURL(imageModal.srcLarge);\n    toggleModal();\n  };\n\n  const clickLoadMore = e => {\n    e.preventDefault();\n    setPage(prevPage => prevPage + 1);\n  };\n\n  return (\n    <div className={s.App}>\n      <Searchbar onSubmit={changeInputValue} />\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={3000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n\n      {images && <ImageGallery images={images} onOpenModal={onClickImg} />}\n      {images && images.length >= 12 && (\n        <Button images={images} onClick={clickLoadMore} />\n      )}\n\n      {showSpinner && <Loader />}\n      {showModal && <Modal onClose={toggleModal} imageModal={largeImageURL} />}\n\n      {error &&\n        toast.error(`${error}`, {\n          position: 'top-right',\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          draggable: true,\n          progress: undefined,\n        })}\n    </div>\n  );\n}\n\n// export default class App extends Component {\n//   state = {\n//     images: null,\n//     query: '',\n//     page: 1,\n//     showModal: false,\n//     showSpinner: false,\n//     largeImageURL: '',\n//     error: null,\n//   };\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (\n//       prevState.query !== this.state.query ||\n//       prevState.page !== this.state.page\n//     ) {\n//       return this.getImages();\n//     }\n//   }\n\n//   changeInputValue = query => {\n//     this.setState({\n//       query,\n//       page: 1,\n//       images: [],\n//     });\n//   };\n\n//   getImages = () => {\n//     const { query, page } = this.state;\n\n//     this.setState({ showSpinner: true });\n\n//     API.fetchPixabayImg(query, page)\n//       .then(images => {\n//         this.setState(prevState => ({\n//           images: [...prevState.images, ...mapper(images.hits)],\n//         }));\n//         if (images.hits.length === 0) {\n//           toast.warn(`Ничего не найдено`, {\n//             position: 'top-right',\n//             autoClose: 5000,\n//             hideProgressBar: false,\n//             closeOnClick: true,\n//             draggable: true,\n//             progress: undefined,\n//           });\n//         }\n//       })\n//       .catch(error => this.setState({ error }))\n//       .finally(() => {\n//         this.setState({ showSpinner: false });\n//         if (page > 1) {\n//           this.scrollTo();\n//         }\n//       });\n//   };\n\n//   toggleModal = () => {\n//     this.setState(({ showModal }) => ({ showModal: !showModal }));\n//   };\n\n//   onClickImg = imageModal => {\n//     this.setState({ largeImageURL: imageModal.srcLarge });\n//     this.toggleModal();\n//   };\n\n//   clickLoadMore = e => {\n//     e.preventDefault();\n//     this.setState(prevState => {\n//       return { page: prevState.page + 1 };\n//     });\n//   };\n//   scrollTo = () => {\n//     window.scrollTo({\n//       top: document.documentElement.scrollHeight,\n//       behavior: 'smooth',\n//     });\n//   };\n\n//   render() {\n//     const { images, showModal, showSpinner, largeImageURL, error } = this.state;\n//     return (\n//       <div className={s.App}>\n//         <Searchbar onSubmit={this.changeInputValue} />\n//         <ToastContainer\n//           position=\"top-right\"\n//           autoClose={3000}\n//           hideProgressBar={false}\n//           newestOnTop={false}\n//           closeOnClick\n//           rtl={false}\n//           pauseOnFocusLoss\n//           draggable\n//           pauseOnHover\n//         />\n\n//         {images && (\n//           <ImageGallery images={images} onOpenModal={this.onClickImg} />\n//         )}\n//         {images && images.length >= 12 && (\n//           <Button images={images} onClick={this.clickLoadMore} />\n//         )}\n\n//         {showSpinner && <Loader />}\n//         {showModal && (\n//           <Modal onClose={this.toggleModal} imageModal={largeImageURL} />\n//         )}\n\n//         {error &&\n//           toast.error(`${error}`, {\n//             position: 'top-right',\n//             autoClose: 5000,\n//             hideProgressBar: false,\n//             closeOnClick: true,\n//             draggable: true,\n//             progress: undefined,\n//           })}\n//       </div>\n//     );\n//   }\n// }\n","const BASE_URL =\r\n  'https://pixabay.com/api/?image_type=photo&orientation=horizontal&per_page=12';\r\nconst API_KEY = '23479775-7c8a7e565023089f3ce2cecd2';\r\n\r\nexport function fetchPixabayImg(query, page) {\r\n  return fetch(`${BASE_URL}&q=${query}&page=${page}&key=${API_KEY}`).then(\r\n    res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(new Error(`Что-то пошло не так`));\r\n    },\r\n  );\r\n}\r\n","export const mapper = images =>\r\n  images.map(({ id, largeImageURL, webformatURL }) => ({\r\n    id,\r\n    largeImageURL,\r\n    webformatURL,\r\n  }));\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__rx7G9\",\"SearchForm\":\"Searchbar_SearchForm__rd7RM\",\"SearchForm_button\":\"Searchbar_SearchForm_button__27oMu\",\"SearchForm_button_label\":\"Searchbar_SearchForm_button_label__HyyOb\",\"SearchForm_input\":\"Searchbar_SearchForm_input__3U-k3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1CjbS\",\"ImageGalleryItem\":\"ImageGallery_ImageGalleryItem__3PH-x\",\"ImageGalleryItem__image\":\"ImageGallery_ImageGalleryItem__image__3dkQC\"};"],"sourceRoot":""}